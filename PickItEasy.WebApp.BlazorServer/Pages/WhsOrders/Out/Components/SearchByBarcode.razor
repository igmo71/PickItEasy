@using PickItEasy.Application.Services.WhsOrdersOut.Queries;

@inject SearchParameters SearchParameters

<input type="hidden" id="barcode" value="@barcode" @onchange="@OnChange" />
@if (SearchParameters.IsBarcode)
{
    <div class="row">
        <div class="col">
            <div class="input-group">
                <InputText type="text" class="form-control" @bind-Value="@SearchParameters.SearchBarcode" placeholder="строка поиска" disabled />
                <button class="btn btn-outline-secondary" type="button" @onclick="ClearSearchAndSubmit" title="Очистить">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public EventCallback OnScannedBarcode { get; set; }

    private string? barcode;

    protected override void OnInitialized()
    {
        SearchParameters.OnChange += SearchParametersChangedHandle;
    }

    private async Task OnChange(ChangeEventArgs args)
    {
        barcode = args.Value?.ToString();
        if (barcode is null) return;

        SearchParameters.SetSearchByBarcode(barcode);
        await OnScannedBarcode.InvokeAsync();
    }

    private async Task ClearSearchAndSubmit()
    {
        SearchParameters.ClearSearchByBarcode();
        await OnScannedBarcode.InvokeAsync();
    }

    private void SearchParametersChangedHandle()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        SearchParameters.OnChange -= SearchParametersChangedHandle;
    }
}
