@using PickItEasy.Application.Services.WhsOrdersOut.Queries

@implements IDisposable

@inject SearchParameters SearchParameters

<BarcodeScan OnScannedBarcode="ScannedBarcodeHandle"></BarcodeScan>

<EditForm Model="@SearchParameters" OnSubmit="SearcByTermhHandle" class="mb-2">
    @if (SearchParameters.IsBarcode)
    {
        <div class="row">
            <div class="col">
                <div class="input-group">
                <InputText type="text" class="form-control" @bind-Value="@SearchParameters.SearchBarcode" placeholder="строка поиска" disabled />
                    <button class="btn btn-outline-secondary" type="button" @onclick="ClearAndSubmit" title="Очистить">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">
                <div class="input-group">
                <InputText type="text" class="form-control" @bind-Value="@SearchParameters.SearchTerm" placeholder="строка поиска" />
                    <button class="btn btn-outline-secondary" type="button" @onclick="ClearAndSubmit" title="Очистить">
                        <i class="bi bi-x"></i>
                    </button>
                    <button class="btn btn-primary" type="button" @onclick="SearcByTermhHandle" title="Поиск">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
        </div>
    }
</EditForm>

@code {
    [Parameter] public EventCallback OnSubmit { get; set; }

    protected override void OnInitialized()
    {
        SearchParameters.OnChange += SearchParametersChangedHandle;
    }

    private async Task SubmitHandle()
    {
        await OnSubmit.InvokeAsync();
    }

    private async Task ScannedBarcodeHandle()
    {
        await SubmitHandle();
    }

    private async Task SearcByTermhHandle()
    {
        SearchParameters.SetSearchByTerm();
        await SubmitHandle();
    }

    private async Task ClearAndSubmit()
    {
        SearchParameters.ClearSearchByTermAndBarcode();
        await SubmitHandle();
    }

    private void SearchParametersChangedHandle()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        SearchParameters.OnChange -= SearchParametersChangedHandle;
    }
}
