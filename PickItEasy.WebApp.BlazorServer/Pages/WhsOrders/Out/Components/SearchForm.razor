@using PickItEasy.Application.Services.WhsOrdersOut.Queries

@implements IDisposable

@inject SearchParameters SearchParameters

<EditForm Model="@SearchParameters" OnSubmit="SubmitHandle" class="mb-2">
    <div class="row">
        <div class="col">
            <div class="input-group">                
                <InputText class="form-control" type="text" id="searchTermInput" @bind-Value="@SearchParameters.SearchTerm" placeholder="строка поиска" />
                <button class="btn btn-outline-secondary" type="button" @onclick="ClearAndSubmit" title="Очистить">
                    <i class="bi bi-x"></i>
                </button>
                <button class="btn btn-primary" type="submit" title="Поиск">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public EventCallback OnSubmit { get; set; }

    protected override void OnInitialized()
    {
        SearchParameters.OnChange += OnChange;
    }

    private void OnChange()
    {
        var term = SearchParameters.SearchTerm;
        StateHasChanged();
        term = SearchParameters.SearchTerm;
    }

    private async Task SubmitHandle()
    {
        await OnSubmit.InvokeAsync();
    }

    private async Task ClearAndSubmit()
    {
        ClearSearchParameters();
        await SubmitHandle();
    }

    private void ClearSearchParameters()
    {
        SearchParameters.SearchTerm = null;
        SearchParameters.IsBarcode = false;
    }

    public void Dispose()
    {
        SearchParameters.OnChange -= OnChange;
    }
}
