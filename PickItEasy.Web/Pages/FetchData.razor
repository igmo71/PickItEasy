@page "/fetchdata"
@using PickItEasy.Application.Services;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using PickItEasy.Domain
@using PickItEasy.Web.Pages.Components
@*@attribute [Authorize]*@
@inject WeatherForecastService ForecastService

@*<AuthorizeView Roles="User">*@
    <PageTitle>Weather forecast</PageTitle>

    <h1>Weather forecast</h1>

    <p>This component demonstrates fetching data from a service.</p>
    
    <SearchWeatherForecast OnSearch="Search"></SearchWeatherForecast>
    
    @if (forecasts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }
@*</AuthorizeView>*@

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetAllAsync(/*DateOnly.FromDateTime(DateTime.Now)*/);
    }

    private async Task Search(SearchWeatherForecastModel searchWeatherForecastModel)
    {
        forecasts = await ForecastService.SearchAsync(searchWeatherForecastModel);
    }
}
